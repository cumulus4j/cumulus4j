<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>org.cumulus4j.jee.test.parent</artifactId>
		<groupId>org.cumulus4j.jee.test</groupId>
		<version>1.1.1</version>
		<relativePath>../org.cumulus4j.jee.test.parent/pom.xml</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.cumulus4j.jee.test.jboss</artifactId>
	<description>JEE test project with JBoss + EJBs</description>

	<properties>
		<JBOSS_HOME>${project.build.directory}/jboss-${version.org.jboss.jbossas}</JBOSS_HOME>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.jboss.jbossas</groupId>
			<artifactId>jboss-as-depchain</artifactId>			    
			<version>${version.org.jboss.jbossas}</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.cumulus4j.jee.test</groupId>
			<artifactId>org.cumulus4j.jee.test.ear</artifactId>
			<type>ear</type>
		</dependency>

		<dependency>
			<groupId>org.cumulus4j.jee.test</groupId>
			<artifactId>org.cumulus4j.jee.test.ejb</artifactId>
			<type>ejb</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.cumulus4j</groupId>
			<artifactId>org.cumulus4j.keymanager.api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.cumulus4j</groupId>
			<artifactId>org.cumulus4j.keystore</artifactId>
		</dependency>
		<dependency>
			<groupId>org.cumulus4j</groupId>
			<artifactId>org.cumulus4j.keymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.cumulus4j</groupId>
			<artifactId>org.cumulus4j.store.crypto.keymanager</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-ejb-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<ejbVersion>3.0</ejbVersion>
				</configuration>
			</plugin>

			<!-- Get AS and put into "target" -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>pre-integration-test</phase> <!-- So run before testing -->
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jboss.jbossas</groupId>
									<artifactId>jboss-as-distribution</artifactId>
									<version>${version.org.jboss.jbossas}</version>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>populate-jboss-deploy</id>
						<phase>integration-test</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${JBOSS_HOME}/server/default/deploy</outputDirectory>
							<includeArtifactIds>org.cumulus4j.jee.test.ear</includeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>set-jboss-permissions</id>
						<phase>pre-integration-test</phase>
						<configuration>
							<target>
								<chmod file="${JBOSS_HOME}/bin/run.sh" perm="755"/>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-jboss-config</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>

						<configuration>
							<outputDirectory>${JBOSS_HOME}/server/default/deploy</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/jboss-config</directory>
									<filtering>false</filtering>
									<includes>
										<include>*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-derby</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>

						<configuration>
							<outputDirectory>${JBOSS_HOME}/lib</outputDirectory> 
							<!-- <outputDirectory>${JBOSS_HOME}/server/default/deploy</outputDirectory> -->
							<resources>
								<resource>
									<directory>${basedir}/src/derby</directory>
									<filtering>false</filtering>
									<includes>
										<include>*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					
				</executions>
			</plugin>
			
 			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-maven-plugin</artifactId>
				<version>1.5.0</version>
				<configuration>
					<serverID>server</serverID>
					<name>server</name>
					<port>8080</port>
					<jbossHome>${JBOSS_HOME}</jbossHome>
					<autoDelete>true</autoDelete>
				</configuration>
				<executions>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<inherited>false</inherited>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
						<inherited>false</inherited>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- We exclude all tests here, because all the tests in this module 
					are INTEGRATION tests which should be executed only when running "mvn integration-test" -->
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/IT*.java</include>
						<include>**/*IT.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<!-- We want the build to fail, if tests fail, because this whole 
								project is about testing (and nothing else) and it is executed in a separate 
								Jenkins-job. Marco :-) -->
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.0,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
											<goal>
												unpack
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>