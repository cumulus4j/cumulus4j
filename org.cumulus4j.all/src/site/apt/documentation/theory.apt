	---
	Theory
	---
	Matthias Huber, Matthias Gabel
	---

Theory

	Cumulus4j uses encryption in order to protect your data.

	Before data is written to the data store, it gets encrypted by Cumulus4j. 
	Cumulus4j also decrypts data before it is used by your application. All this happens transparently to your application.

[../images/scheme.jpeg] Basic Cumulus4j scheme

* The Cumulus4j data structure

	The Cumulus4j datastructure is depicted below. 
	It stores objects in a manner that hides relations of field values i.e. which values occur together in an object.
	
[../images/c4j-datastructure.png] The Cumulus4j data structure

	In the table ClassMeta, metadata about objects is stored. 
	Each ClassMeta entry has a list of references to the FieldMeta entries of the fields of the class. 
	In the table FieldMeta, metadata about object fields is stored. 
	Each FieldMeta entry has a reference to the ClassMeta entry of its class and may have references to its sub-fields. 
	The table DataEntry holds encrypted representation of actual objects. 
	These objects can be accessed through IndexEntry tables that hold index values and encrypted pointers to the DataEntry table.
	Additionally each index entry has a reference to the FieldMeta entry of its field.

* Encryption

	We use state of the art probabilistic symmetric encryption schemes (e.g. AES with Galois/Counter mode and PKCS#5 padding) to
	protect your data.
	The	encryption not only hides the content, it also makes sure that data manipulations will be detected.
	Cumulus4j applies encryption to the DataEntries and to the indices in the IndexEntries.

* Decryption

	Cumulus4j transforms issued queries in order to execute them on the Cumulus4j Data Structure.
	Retrieved data is encrypted on-the-fly. Selections are executed efficiently in 4 Steps.

	* Retrieve IndexEntries that match the conditions of the query. This involves decryption.
	
	* Retrieve the encrypted DataEntries that correspont to the retrieved IndexEntries
	
	* Decrypt DataEntries, project and aggregate them acording to the issued query.
	
	* Return results.

* Security

	Cumulus4j provides
	{{{http://books.google.com/books?id=JxiCjJI8C_0C&pg=PA164&dq=Indistinguishability+under+Independent+Column+Permutation&hl=en&ei=ChFLTqupOYf4sgaArtnEBw&sa=X&oi=book_result&ct=result&resnum=1&ved=0CCkQ6AEwAA}Ind-ICP}}
	security for your data. This means, that it hides which attribute values belong together. 
	An adversary copying your datastore cannot reconstruct the stored objects.

* Compatibility

	The Cumulus4j adapter can be used transparently to the client application.
	It is integrated into DataNucleus and fully supports JDO and JPA.

* Performance

	Due to the use of symmetric encryption and indices for fast record lookup, the plugin already provides good performance.
	One goal of this project is speed optimization resulting in only a small overhead for security.
